# DatingPulse Application Configuration

spring.application.name=DatingPulse

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/datingpulse
spring.datasource.username=${DB_USERNAME:magnolia}
spring.datasource.password=${DB_PASSWORD:magnolia}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Ensure Hibernate respects @Column annotations and uses explicit naming
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.default-property-inclusion=NON_NULL

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB

# Photo Upload and Storage Configuration
app.s3.bucket-name=${S3_BUCKET_NAME:datingpulse}
app.s3.region=${S3_REGION:af-south-1}
app.upload.max-file-size=5242880
app.upload.allowed-types=jpg,jpeg,png,gif,webp
app.upload.resize.max-width=1024
app.upload.resize.max-height=1024

# AWS Credentials Configuration (use environment variables for security)
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID:}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY:}
cloud.aws.region.static=${AWS_REGION:af-south-1}

# Content Moderation Configuration
app.moderation.auto-approve=${AUTO_APPROVE_PHOTOS:false}
app.moderation.blocked-keywords=nude,explicit,inappropriate,nsfw,adult,sex,porn

# Security Configuration
# JWT secret should be externalized in production
app.jwt.secret=${JWT_SECRET:mySecretKey}
app.jwt.expiration=86400000

# Security Hardening Configuration
app.security.https-only=${HTTPS_ONLY:false}
app.security.content-security-policy=${CSP:default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https:; font-src 'self' https:}

# Data Encryption Configuration
app.encryption.key=${ENCRYPTION_KEY:}

# Rate Limiting Configuration (provided by Bucket4j)
app.rate-limiting.enabled=true

# Validation Configuration
spring.jpa.properties.jakarta.persistence.validation.mode=auto

# Logging Configuration
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.magnolia.datingpulse=INFO

# Management and Monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus,caches,httptrace,loggers
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.application=${spring.application.name}

# Cache Configuration
app.cache.enabled=true
spring.cache.type=redis
spring.cache.redis.time-to-live=1800000
spring.cache.redis.cache-null-values=false

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Database Connection Pool (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000

# Email Configuration for OTP verification
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:datingpulse87@gmail.com}
spring.mail.password=${MAIL_PASSWORD:tnckdnlcdqveappn}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Application Email Settings
app.mail.from=${MAIL_FROM:datingpulse87@gmail.com}
app.mail.enabled=${MAIL_ENABLED:true}

# Push Notification Configuration
app.notifications.push.enabled=${PUSH_NOTIFICATIONS_ENABLED:true}
app.notifications.push.fcm.key=${FCM_SERVER_KEY:}

# Firebase Configuration
app.firebase.config-path=${FIREBASE_CONFIG_PATH:firebase-service-account.json}
app.firebase.project-id=${FIREBASE_PROJECT_ID:datingpulse}

# FCM Configuration
app.fcm.sender-id=${FCM_SENDER_ID:860494366126}
app.fcm.vapid-key=${FCM_VAPID_KEY:BExJOpyu_54cE4U5uEUYOOakcR2mEGCpV3OE7qddPHtP30qkGRuvx-W0zeztPn04ast_-NLcezrQtqus4TpovbI}
