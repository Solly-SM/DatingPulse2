{"@timestamp":"2025-09-08T01:18:15.033243109Z","level":"INFO","logger_name":"org.hibernate.validator.internal.util.Version","message":"HV000001: Hibernate Validator 8.0.1.Final","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:15.098767619Z","level":"INFO","logger_name":"magnolia.datingpulse.DatingPulse.DatingPulseApplicationTests","message":"Starting DatingPulseApplicationTests using Java 17.0.16 with PID 4359 (started by runner in /home/runner/work/DatingPulse/DatingPulse/backend/DatingPulse)","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:15.102263176Z","level":"INFO","logger_name":"magnolia.datingpulse.DatingPulse.DatingPulseApplicationTests","message":"The following 1 profile is active: \"test\"","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:16.976342931Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:16.9780375Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.281678581Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 296 ms. Found 22 JPA repository interfaces.","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.307351728Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.308554848Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode.","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.332129362Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.AdminRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.332655716Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.AudioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.333970004Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.BlockedUserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.334530091Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.ConversationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.335228086Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.DeviceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.335595243Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.GradeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.335975173Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.InterestRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.33633681Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.LikeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.337712442Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.MatchRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.339064981Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.340401328Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.NotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.340780978Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.OtpRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.34115638Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.341538695Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.PhotoReportRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.343880805Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.PhotoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.347698596Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.PreferenceRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.348221353Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.ProfileVerificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.348621201Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.ReportRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.349005389Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.SessionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.349375622Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.SwipeHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.349793132Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.UserProfileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.35018213Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface magnolia.datingpulse.DatingPulse.repositories.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:17.350485878Z","level":"INFO","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 34 ms. Found 0 Redis repository interfaces.","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:18.335788516Z","level":"INFO","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:18.39285991Z","level":"INFO","logger_name":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:18.399807222Z","level":"WARN","logger_name":"org.hibernate.orm.deprecation","message":"HHH90000021: Encountered deprecated setting [javax.persistence.validation.mode], use [jakarta.persistence.validation.mode] instead","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:18.426088498Z","level":"INFO","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","message":"HHH000026: Second-level cache disabled","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:18.636628503Z","level":"INFO","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:18.660855759Z","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting...","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:18.836226254Z","level":"INFO","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:18.837701012Z","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed.","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:18.860325871Z","level":"WARN","logger_name":"org.hibernate.orm.deprecation","message":"HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.886845855Z","level":"INFO","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.901412094Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists admin_permissions cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.905944209Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists admins cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.906368032Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists audios cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.906696456Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists blocked_users cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.907922769Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists conversations cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.908567014Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists devices cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.908925595Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists grades cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.909280158Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists interests cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.909903233Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists likes cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.9102492Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists matches cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.910557406Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists messages cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.911456046Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists notifications cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.911977662Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists otps cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.912955751Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists permissions cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.91363424Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists photo_reports cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.914475403Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists photos cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.914909264Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists preferences cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.915220266Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists profile_verifications cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.915537128Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists reports cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.915841688Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists sessions cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.916146408Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists swipe_history cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.916439506Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists user_interests cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.917274077Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists user_profiles cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.918462429Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists users cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.923689163Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table admin_permissions (\n        admin_id bigint not null,\n        permission_id bigint not null,\n        primary key (admin_id, permission_id)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.931219976Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table admins (\n        adminid bigint generated by default as identity,\n        user_id bigint not null unique,\n        role varchar(255) not null,\n        primary key (adminid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.939344048Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table audios (\n        duration integer check ((duration>=1) and (duration<=300)),\n        id bigint generated by default as identity,\n        updated_at timestamp(6),\n        uploaded_at timestamp(6) not null,\n        user_profile_id bigint not null,\n        description varchar(500),\n        status varchar(255) not null check (status in ('ACTIVE','FLAGGED','REMOVED')),\n        url varchar(255) not null,\n        visibility varchar(255) not null check (visibility in ('PUBLIC','PRIVATE','MATCHES_ONLY')),\n        primary key (id)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.950185251Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table blocked_users (\n        blocked_at timestamp(6) not null,\n        blockedid bigint not null,\n        blockerid bigint not null,\n        blockid bigint generated by default as identity,\n        primary key (blockid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.952122223Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table conversations (\n        deleted_for_user1 boolean,\n        deleted_for_user2 boolean,\n        conversationid bigint generated by default as identity,\n        last_messageid bigint unique,\n        matchid bigint not null,\n        started_at timestamp(6) not null,\n        primary key (conversationid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.956012398Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table devices (\n        created_at timestamp(6) not null,\n        deviceid bigint generated by default as identity,\n        last_seen timestamp(6),\n        userid bigint not null,\n        device_info varchar(500),\n        push_token varchar(255),\n        type varchar(255) not null,\n        primary key (deviceid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.957649088Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table grades (\n        grade integer not null check ((grade<=5) and (grade>=1)),\n        gradeid bigint generated by default as identity,\n        user_givenid bigint not null,\n        user_receivedid bigint not null,\n        primary key (gradeid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.960379264Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table interests (\n        id bigint generated by default as identity,\n        name varchar(255) not null unique,\n        primary key (id)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.963333358Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table likes (\n        liked_at timestamp(6) not null,\n        liked_userid bigint not null,\n        likeid bigint generated by default as identity,\n        userid bigint not null,\n        type varchar(255) not null check (type in ('LIKE','DISLIKE','SUPERLIKE')),\n        primary key (likeid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.965091826Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table matches (\n        is_active boolean,\n        expires_at timestamp(6),\n        id bigint generated by default as identity,\n        matched_at timestamp(6),\n        user_one_id bigint not null,\n        user_two_id bigint not null,\n        match_source varchar(255),\n        primary key (id),\n        unique (user_one_id, user_two_id)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.970417265Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table messages (\n        deleted_for_receiver boolean not null,\n        deleted_for_sender boolean not null,\n        is_edited boolean not null,\n        is_read boolean not null,\n        conversationid bigint not null,\n        messageid bigint generated by default as identity,\n        receiverid bigint not null,\n        senderid bigint not null,\n        sent_at timestamp(6) not null,\n        status varchar(20) not null,\n        type varchar(20) not null,\n        content TEXT not null,\n        primary key (messageid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.972551356Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table notifications (\n        is_read boolean not null,\n        created_at timestamp(6) not null,\n        notificationid bigint generated by default as identity,\n        relatedid bigint,\n        userid bigint not null,\n        content TEXT not null,\n        priority varchar(255),\n        title varchar(255) not null,\n        type varchar(255) not null,\n        primary key (notificationid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.975137322Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table otps (\n        is_used boolean not null,\n        created_at timestamp(6) not null,\n        expires_at timestamp(6) not null,\n        otpid bigint generated by default as identity,\n        userid bigint not null,\n        code varchar(255) not null,\n        type varchar(255) not null,\n        primary key (otpid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.978207172Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table permissions (\n        id bigint generated by default as identity,\n        name varchar(50) not null unique,\n        primary key (id)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.979684435Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table photo_reports (\n        photo_id bigint not null,\n        report_id bigint generated by default as identity,\n        reported_at timestamp(6) not null,\n        reporter_id bigint not null,\n        reviewed_at timestamp(6),\n        reviewed_by bigint,\n        resolution_notes varchar(500),\n        additional_details varchar(1000),\n        report_type varchar(255) not null check (report_type in ('INAPPROPRIATE_CONTENT','NUDITY','SPAM','FAKE_PROFILE','HARASSMENT','COPYRIGHT_VIOLATION','OTHER')),\n        status varchar(255) not null check (status in ('PENDING','REVIEWING','RESOLVED','DISMISSED')),\n        primary key (report_id)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.985813937Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table photos (\n        is_private boolean not null,\n        is_profile_photo boolean not null,\n        order_index integer check (order_index>=0),\n        photoid bigint generated by default as identity,\n        updated_at timestamp(6),\n        uploaded_at timestamp(6) not null,\n        userid bigint not null,\n        description varchar(500),\n        status varchar(255) not null check (status in ('PENDING','ACTIVE','FLAGGED','REJECTED','REMOVED')),\n        url varchar(255) not null,\n        visibility varchar(255) not null check (visibility in ('PUBLIC','PRIVATE','MATCHES_ONLY')),\n        primary key (photoid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.990065688Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table preferences (\n        age_max integer,\n        age_min integer,\n        max_distance integer,\n        max_height integer,\n        min_height integer,\n        open_tolgbtq boolean,\n        wants_children boolean,\n        id bigint generated by default as identity,\n        user_profile_id bigint unique,\n        body_type varchar(255),\n        covid_preference varchar(255),\n        dietary_preference varchar(255),\n        drinking varchar(255),\n        education_level varchar(255),\n        ethnicity varchar(255),\n        exercise_preference varchar(255),\n        family_plans varchar(255),\n        gender_preference varchar(255),\n        height_unit varchar(255),\n        hobbies varchar(255),\n        languages varchar(255),\n        pets varchar(255),\n        politics varchar(255),\n        relationship_type varchar(255),\n        religion varchar(255),\n        smoking varchar(255),\n        star_sign varchar(255),\n        primary key (id)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.993986921Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table profile_verifications (\n        rejected_at timestamp(6),\n        requested_at timestamp(6) not null,\n        reviewerid bigint,\n        userid bigint not null,\n        verificationid bigint generated by default as identity,\n        verified_at timestamp(6),\n        notes varchar(1000),\n        documenturl varchar(255),\n        status varchar(255) not null,\n        type varchar(255) not null,\n        primary key (verificationid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.995335362Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table reports (\n        reported_at timestamp(6) not null,\n        reportedid bigint not null,\n        reporterid bigint not null,\n        reportid bigint generated by default as identity,\n        resolved_at timestamp(6),\n        reviewed_by bigint,\n        targetid bigint not null,\n        reason varchar(255) not null,\n        status varchar(255) not null,\n        target_type varchar(255) not null,\n        primary key (reportid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:20.999112325Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table sessions (\n        created_at timestamp(6) not null,\n        expires_at timestamp(6) not null,\n        revoked_at timestamp(6),\n        userid bigint not null,\n        sessionid varchar(64) not null,\n        token varchar(256) not null unique,\n        device_info varchar(255),\n        primary key (sessionid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.001634392Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table swipe_history (\n        is_rewind boolean not null,\n        created_at timestamp(6) not null,\n        deviceid bigint not null,\n        swipeid bigint generated by default as identity,\n        target_userid bigint not null,\n        userid bigint not null,\n        sessionid varchar(64),\n        app_version varchar(255) not null,\n        swipe_type varchar(255) not null,\n        primary key (swipeid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.004720533Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table user_interests (\n        interest_id bigint not null,\n        user_profile_id bigint not null,\n        primary key (interest_id, user_profile_id)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.007101275Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table user_profiles (\n        age integer check ((age<=120) and (age>=18)),\n        dob date,\n        latitude float(53),\n        longitude float(53),\n        last_seen timestamp(6),\n        user_id bigint not null,\n        gender varchar(20) not null,\n        firstname varchar(50),\n        lastname varchar(50),\n        city varchar(100),\n        country varchar(100),\n        region varchar(100),\n        education varchar(200),\n        job_title varchar(200),\n        avatar_thumbnail varchar(500),\n        pp varchar(500),\n        bio varchar(1024),\n        privacy varchar(255) not null check (privacy in ('PUBLIC','PRIVATE','FRIENDS_ONLY')),\n        relationship varchar(255),\n        primary key (user_id)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.012101425Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create table users (\n        is_verified boolean not null,\n        login_attempt integer not null check ((login_attempt<=10) and (login_attempt>=0)),\n        created_at timestamp(6) not null,\n        last_login timestamp(6),\n        updated_at timestamp(6) not null,\n        userid bigint generated by default as identity,\n        phone varchar(20) unique,\n        role varchar(20) not null,\n        status varchar(20) not null,\n        username varchar(50) not null unique,\n        email varchar(255) not null unique,\n        password varchar(255) not null,\n        primary key (userid)\n    )","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.016976652Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create index idx_conversation_sent_at \n       on messages (conversationid, sent_at)","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.019881303Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create index idx_sender_sent_at \n       on messages (senderid, sent_at)","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.020536499Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    create index idx_receiver_sent_at \n       on messages (receiverid, sent_at)","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.021239844Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists admin_permissions \n       add constraint FKnsvtyfiw1p79557uwvtdwanae \n       foreign key (permission_id) \n       references permissions","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.031808187Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists admin_permissions \n       add constraint FK7vyuc2dwnyqi0v44ab5n5faca \n       foreign key (admin_id) \n       references admins","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.035700345Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists admins \n       add constraint FKgc8dtql9mkq268detxiox7fpm \n       foreign key (user_id) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.03689517Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists audios \n       add constraint FKotuwtkbpgp97tiqx3lw1hd8w5 \n       foreign key (user_profile_id) \n       references user_profiles","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.03936595Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists blocked_users \n       add constraint FK301e82j8sfchng8ejvnhd2pi2 \n       foreign key (blockedid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.041962415Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists blocked_users \n       add constraint FKqjia7cigadfq21g2kq68gve7m \n       foreign key (blockerid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.044042975Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists conversations \n       add constraint FKpbf46ymmemjeysjquq9nudybb \n       foreign key (last_messageid) \n       references messages","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.045289556Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists conversations \n       add constraint FKpkdwl8txmuymk84khwhegqib1 \n       foreign key (matchid) \n       references matches","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.047020645Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists devices \n       add constraint FK9xjj6x9ueb7id644i4ycukpug \n       foreign key (userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.050593736Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists grades \n       add constraint FKt4eqd8b50lkhpox4uo7b5t2ig \n       foreign key (user_givenid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.053248289Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists grades \n       add constraint FK1dvi17pew1ibc39kfpcxefs8w \n       foreign key (user_receivedid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.056764766Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists likes \n       add constraint FKhfi99gfrfrt72naruc1utno9b \n       foreign key (liked_userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.059154745Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists likes \n       add constraint FKhtad8wmxkw770qkrkxnm5ijd8 \n       foreign key (userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.06056331Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists matches \n       add constraint FKlfgspbh574qf6k99x3wjvtq17 \n       foreign key (user_one_id) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.063929605Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists matches \n       add constraint FKauh51al955micwc661l8xb6ce \n       foreign key (user_two_id) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.065496945Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists messages \n       add constraint FK9lv6l0fjewb396ne00ilyhdvg \n       foreign key (conversationid) \n       references conversations","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.06686835Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists messages \n       add constraint FKainbx5m37u56rtp7obu6dbfvm \n       foreign key (receiverid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.068640223Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists messages \n       add constraint FKdqgg27nlpcggtmb095qpptigt \n       foreign key (senderid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.070142533Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists notifications \n       add constraint FKtockhlhmgah7lpxrernp6a34 \n       foreign key (userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.071590941Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists otps \n       add constraint FKea60s11cpbld1lyy07rm9ad6n \n       foreign key (userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.073022959Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists photo_reports \n       add constraint FKdddo486ctbyff3wbym4ar3oq6 \n       foreign key (photo_id) \n       references photos","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.074403832Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists photo_reports \n       add constraint FKlrv28j1hbqburci7jvbi4ns37 \n       foreign key (reporter_id) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.075752584Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists photo_reports \n       add constraint FKlldff7dnm0jhufgq2wx5j6k31 \n       foreign key (reviewed_by) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.077123618Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists photos \n       add constraint FKst4ia4wvttrb5ym6bl6nfc0ao \n       foreign key (userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.078484483Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists preferences \n       add constraint FK2s85tlcyp9oi7pcxv6e94etyq \n       foreign key (user_profile_id) \n       references user_profiles","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.079608885Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists profile_verifications \n       add constraint FK3uvrlc8g9rbea8qphsrwbuqjt \n       foreign key (reviewerid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.081083162Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists profile_verifications \n       add constraint FKgs06eims153tnomr445snitb4 \n       foreign key (userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.082425492Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists reports \n       add constraint FKfyxnprys7y6gjgcj4cr98e4wm \n       foreign key (reportedid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.083891924Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists reports \n       add constraint FKd774j8mogqmh6opi1fvmhylyy \n       foreign key (reporterid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.085296601Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists reports \n       add constraint FK3kgb0w5egvo3d1uxiepkgrdrk \n       foreign key (reviewed_by) \n       references admins","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.08677205Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists sessions \n       add constraint FKhhicn3brukxnn876dpg8b6mp1 \n       foreign key (userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.0907772Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists swipe_history \n       add constraint FKi3gv61ty8q4ykphgjdw26vu3q \n       foreign key (deviceid) \n       references devices","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.092358677Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists swipe_history \n       add constraint FKx9a9megwwfrf0334i1n3ccrh \n       foreign key (sessionid) \n       references sessions","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.095046733Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists swipe_history \n       add constraint FKpw6aas43nrfegcroxiqk585ty \n       foreign key (target_userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.098564471Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists swipe_history \n       add constraint FK1oa2ets842ar702pf208i35k5 \n       foreign key (userid) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.102014612Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists user_interests \n       add constraint FK8h2mk04o9ctuoqvntl29chtcm \n       foreign key (interest_id) \n       references interests","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.10608251Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists user_interests \n       add constraint FKe4nt51igx1ncjp1dsm7rc8ove \n       foreign key (user_profile_id) \n       references user_profiles","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.107546046Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists user_profiles \n       add constraint FKjcad5nfve11khsnpwj1mv8frj \n       foreign key (user_id) \n       references users","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:21.115395185Z","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:22.297623552Z","level":"INFO","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","message":"Hibernate is in classpath; If applicable, HQL parser will be used.","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.460152247Z","level":"WARN","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'monitoringController' defined in file [/home/runner/work/DatingPulse/DatingPulse/backend/DatingPulse/target/classes/magnolia/datingpulse/DatingPulse/controller/MonitoringController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.cache.CacheManager' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.463703881Z","level":"INFO","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.464394041Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists admin_permissions cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.468795021Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists admins cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.472223392Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists audios cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.473368624Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists blocked_users cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.476161284Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists conversations cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.4774101Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists devices cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.480821641Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists grades cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.481578066Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists interests cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.484616548Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists likes cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.485454985Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists matches cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.486989856Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists messages cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.487982191Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists notifications cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.488692319Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists otps cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.491162026Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists permissions cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.491825457Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists photo_reports cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.493449836Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists photos cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.496010254Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists preferences cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.496667333Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists profile_verifications cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.497292131Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists reports cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.497890039Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists sessions cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.498506202Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists swipe_history cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.500464433Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists user_interests cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.501011256Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists user_profiles cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.501477868Z","level":"DEBUG","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists users cascade ","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.507548761Z","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated...","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.511925704Z","level":"INFO","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed.","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.536291058Z","level":"INFO","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.608776659Z","level":"ERROR","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nParameter 1 of constructor in magnolia.datingpulse.DatingPulse.controller.MonitoringController required a bean of type 'org.springframework.cache.CacheManager' that could not be found.\n\n\nAction:\n\nConsider defining a bean of type 'org.springframework.cache.CacheManager' in your configuration.\n","app":"datingpulse","environment":"prod"}
{"@timestamp":"2025-09-08T01:18:23.614197626Z","level":"WARN","logger_name":"org.springframework.test.context.TestContextManager","message":"Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [magnolia.datingpulse.DatingPulse.DatingPulseApplicationTests@66af6b7b]","stack_trace":"java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@326471ab testClass = magnolia.datingpulse.DatingPulse.DatingPulseApplicationTests, locations = [], classes = [magnolia.datingpulse.DatingPulse.DatingPulseApplication], contextInitializerClasses = [], activeProfiles = [\"test\"], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@210ab13f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29d80d2b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7d3e8655, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@1e16c0aa, org.springframework.boot.testcontainers.service.connection.ServiceConnectionContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@ad58ae20], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\n\tat org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\n\tat org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'monitoringController' defined in file [/home/runner/work/DatingPulse/DatingPulse/backend/DatingPulse/target/classes/magnolia/datingpulse/DatingPulse/controller/MonitoringController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.cache.CacheManager' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\n\tat org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\n\tat org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)\n\tat org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\n\tat org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\n\tat org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\n\t... 73 common frames omitted\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.cache.CacheManager' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1880)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1406)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)\n\t... 97 common frames omitted\n","app":"datingpulse","environment":"prod"}
